<resources>
    <string name="app_name">DevInterview</string>
    <string name="testing_choose">Please, choose type of testing</string>
    <string name="tickets">Tickets</string>
    <string name="exam">Exam</string>
    <string name="large_text">
        "                               Developer Interview\n\n"

        "A material metaphor is the unifying theory of a rationalized space and a system of motion."
        "The material is grounded in tactile reality, inspired by the study of paper and ink, yet "
        "technologically advanced and open to imagination and magic.\n"
        "Surfaces and edges of the material provide visual cues that are grounded in reality. The "
        "use of familiar tactile attributes helps users quickly understand affordances. Yet the "
        "flexibility of the material creates new affordances that supercede those in the physical "
        "world, without breaking the rules of physics.\n"
        "The fundamentals of light, surface, and movement are key to conveying how objects move, "
        "interact, and exist in space and in relation to each other. Realistic lighting shows "
        "seams, divides space, and indicates moving parts.\n\n"

        "Bold, graphic, intentional.\n\n"

        "The foundational elements of print based design typography, grids, space, scale, color, "
        "and use of imagery guide visual treatments. These elements do far more than please the "
        "eye. They create hierarchy, meaning, and focus. Deliberate color choices, edge to edge "
        "imagery, large scale typography, and intentional white space create a bold and graphic "
        "interface that immerse the user in the experience.\n"
        "An emphasis on user actions makes core functionality immediately apparent and provides "
        "waypoints for the user.\n\n"

        "Motion provides meaning.\n\n"

        "Motion respects and reinforces the user as the prime mover. Primary user actions are "
        "inflection points that initiate motion, transforming the whole design.\n"
        "All action takes place in a single environment. Objects are presented to the user without "
        "breaking the continuity of experience even as they transform and reorganize.\n"
        "Motion is meaningful and appropriate, serving to focus attention and maintain continuity. "
        "Feedback is subtle yet clear. Transitions are efﬁcient yet coherent.\n\n"

        "3D world.\n\n"

        "The material environment is a 3D space, which means all objects have x, y, and z "
        "dimensions. The z-axis is perpendicularly aligned to the plane of the display, with the "
        "positive z-axis extending towards the viewer. Every sheet of material occupies a single "
        "position along the z-axis and has a standard 1dp thickness.\n"
        "On the web, the z-axis is used for layering and not for perspective. The 3D world is "
        "emulated by manipulating the y-axis.\n\n"

        "Light and shadow.\n\n"

        "Within the material environment, virtual lights illuminate the scene. Key lights create "
        "directional shadows, while ambient light creates soft shadows from all angles.\n"
        "Shadows in the material environment are cast by these two light sources. In Android "
        "development, shadows occur when light sources are blocked by sheets of material at "
        "various positions along the z-axis. On the web, shadows are depicted by manipulating the "
        "y-axis only. The following example shows the card with a height of 6dp.\n\n"

        "Resting elevation.\n\n"

        "All material objects, regardless of size, have a resting elevation, or default elevation "
        "that does not change. If an object changes elevation, it should return to its resting "
        "elevation as soon as possible.\n\n"

        "Component elevations.\n\n"

        "The resting elevation for a component type is consistent across apps (e.g., FAB elevation "
        "does not vary from 6dp in one app to 16dp in another app).\n"
        "Components may have different resting elevations across platforms, depending on the depth "
        "of the environment (e.g., TV has a greater depth than mobile or desktop).\n\n"

        "Responsive elevation and dynamic elevation offsets.\n\n"

        "Some component types have responsive elevation, meaning they change elevation in response "
        "to user input (e.g., normal, focused, and pressed) or system events. These elevation "
        "changes are consistently implemented using dynamic elevation offsets.\n"
        "Dynamic elevation offsets are the goal elevation that a component moves towards, relative "
        "to the component’s resting state. They ensure that elevation changes are consistent "
        "across actions and component types. For example, all components that lift on press have "
        "the same elevation change relative to their resting elevation.\n"
        "Once the input event is completed or cancelled, the component will return to its resting "
        "elevation.\n\n"

        "Avoiding elevation interference.\n\n"

        "Components with responsive elevations may encounter other components as they move between "
        "their resting elevations and dynamic elevation offsets. Because material cannot pass "
        "through other material, components avoid interfering with one another any number of ways, "
        "whether on a per component basis or using the entire app layout.\n"
        "On a component level, components can move or be removed before they cause interference. "
        "For example, a floating action button (FAB) can disappear or move off screen before a "
        "user picks up a card, or it can move if a snackbar appears.\n"
        "On the layout level, design your app layout to minimize opportunities for interference. "
        "For example, position the FAB to one side of stream of a cards so the FAB won’t interfere "
        "when a user tries to pick up one of cards.\n\n"
    </string>
    <string name="developer_interview">Developer Interview</string>
    <string name="theme_app">Тема приложения</string>
    <string name="theme_change">Смена темы</string>
    <string name="statistics_app">Статистика приложения</string>
    <string name="reset_progress">Сбросить прогресс</string>
    <string name="notifications">Уведомления</string>
    <string name="to_configure">Настроить</string>
    <string name="other">Прочее</string>
    <string name="feedback">Обратная связь</string>
    <string name="user_agreement">Пользовательское соглашение</string>
    <string name="version_app">Версия приложения:</string>
    <string name="_0_0_1">0.0.1</string>
    <string name="daily_reminders">Ежеденевные напоминания</string>
    <string name="notification_time">Время уведомлений</string>
    <string name="for_all_questions">По всем вопросам</string>
    <string name="first_java_oop_oop"><a href="https://javarush.ru/groups/posts/principy-oop">Принципы ООП</a></string>
    <string name="second_java_oop"><a href="https://javarush.ru/groups/posts/1969-principih-inkapsuljacii">Инкапсуляция</a></string>
    <string name="third_java_oop"><a href="https://metanit.com/java/tutorial/3.5.php">Наследование</a></string>
    <string name="fourth_java_oop"><a href="https://javarush.ru/groups/posts/polimorfizm-v-java">Полиморфизм</a></string>
    <string name="fifth_java_oop"><a href="https://vertex-academy.com/tutorials/ru/samouchitel-po-java-s-nulya/">Особенности в Java</a></string>
    <string name="second_java_variable"><a href="https://vertex-academy.com/tutorials/ru/sozdanie-peremennyx-i-tipy-peremenny/">Переменные</a></string>
    <string name="third_java_variable"><a href="https://javarush.ru/groups/posts/massivy-java">Массивы</a></string>
    <string name="fourth_java_variable"><a href="https://javarush.ru/groups/posts/2496-podrobnihy-razbor-klassa-hashmap">Хеш-структуры</a></string>
    <string name="fifth_java_variable"><a href="https://upread.ru/art.php?id=986">Связные списки</a></string>
    <string name="first_java_variable"><a href="https://proglib.io/p/8-data-structures">Основные структуры</a></string>
    <string name="first_java_lesson"><a href="https://stepik.org/course/187/promo">Особенности Java</a></string>
    <string name="second_java_lesson"><a href="https://javarush.ru/">Краткое изложение</a></string>
    <string name="third_java_lesson"><a href="https://metanit.com/java/tutorial/1.1.php">Курс для начинающих</a></string>
    <string name="first_python_oop"><a href="https://proglib.io/p/python-oop">Приципы ООП</a></string>
    <string name="second_python_oop"><a href="https://habr.com/ru/post/444338/">Инкапсуляция</a></string>
    <string name="third_python_oop"><a href="https://ru.hexlet.io/courses/python-oop-basics/lessons/inheritance/theory_unit">Наследование</a></string>
    <string name="fourth_python_oop"><a href="https://habr.com/ru/post/552922/">Полиморфизм</a></string>
    <string name="fifth_python_oop"><a href="https://pythonchik.ru/osnovy/osnovy-oop-v-python-klassy-obekty-metody">Особенности в Python</a></string>
    <string name="first_python_variable"><a href="https://metanit.com/python/tutorial/2.2.php">Основные структуры</a></string>
    <string name="third_python_variable"><a href="https://pythonworld.ru/tipy-dannyx-v-python/spiski-list-funkcii-i-metody-spiskov.html">Списки</a></string>
    <string name="fourth_python_variable"><a href="https://pythonworld.ru/tipy-dannyx-v-python/kortezhi-tuple.html">Кортежи</a></string>
    <string name="fifth_python_variable"><a href="https://habr.com/ru/company/otus/blog/470828/">Связные списки</a></string>
    <string name="second_python_variable"><a href="https://metanit.com/python/tutorial/2.2.php">Переменные</a></string>
    <string name="first_python_lesson"><a href="https://stepik.org/course/67/promo">Особенности Python</a></string>
    <string name="second_python_lesson"><a href="https://habr.com/ru/post/29778/">Краткое изложение</a></string>
    <string name="third_python_lesson"><a href="https://ru.code-basics.com/languages/python">Курс для начинающих</a></string>





</resources>